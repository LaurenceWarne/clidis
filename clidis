#!/bin/bash - 
#===============================================================================
#
#          FILE: clidis 
# 
#         USAGE: ./clidis 
# 
#   DESCRIPTION: start desktop environment in tty!
# 
#  REQUIREMENTS: being in tty! 
#         NOTES: add your desktop in startDesktop function and run it!
#        AUTHOR: VirtualDemon (VD) 
#       CREATED: 03/01/2019 12:38
#	VERSION: 1.0
#===============================================================================
# you can fork me and make me better from : https://github.com/virtualdemon/clidis
# licensed under GNU GENERAL PUBLIC LICENSE Version 3

# reset the terminal
tput reset
# set colors
resetColor=$(tput sgr0)
redColor=$(tput setaf 1)
greenColor=$(tput setaf 2)
blueColor=$(tput setaf 4)
boldText=$(tput bold)
# check if another desktop environment is running
if [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then
	# script banner
	echo "
	${boldText} 
	${blueColor}
      _                  
     | | o     |  o      
 __  | |     __|      , 
/    |/  |  /  |  |  / \_
\___/|__/|_/\_/|_/|_/ \/ 	
	${resetColor}"
	# get the desktop lists without .desktop extension from /usr/share/xsessions
	desktops=$(ls /usr/share/xsessions/ | sed 's/.desktop//g')
	# set deCounter for printing the desktop environments
	deCounter=0
	# print desktop environments like:  1) xfce
	for de in ${desktops[@]} ; do
		if [ $deCounter -eq 0 ] ; then
			echo "  ${redColor}0${resetColor}) ${greenColor}TTY${resetColor}"
			((deCounter++))
		fi
		echo "  ${redColor}$deCounter${resetColor}) ${greenColor}$de${resetColor}"
		# increase deCounter until desktop environments finished...
		((deCounter++))
	done
	echo -e "\n"
	# get the number of printed desktop from user
	read -p $'\e[35mPlease choose the NUMBER of your installed DE or WM :\e[0m ' userChoice
	# check user input 
	if [[ ! $userChoice || $userChoice = *[^0-9]* ]]; then
    		echo "${boldText}${redColor}Error: '$userChoice' is not a number.${resetColor}" >&2
		exit -1
	elif [[ $userChoice -gt $deCounter ]] ; then
		echo "${boldText}${redColor}Error: '$userChoice' is not in range.${resetColor}" >&2
		exit -1
	fi
	# custom function to start desktop environment
	function startDesktop {
		if [[ $1 -eq 0 ]] ; then
			echo "${greenColor}Welcome to TTY!${resetColor}"
			echo "${boldText}${blueColor}To logout from current user use <exit> command!${resetColor}"
			exec $SHELL
		fi
		if [ -e ~/.xinitrc ] ; then
			mv ~/.xinitrc ~/.xinitrc-$(date +%m-%d-%H-%M-%S)-bak
		fi		
		# get the name of desktop environment
		chosenDesktop=$(echo $desktops | tr " " "\n" | sed -n "$1 p")
		# start chosen desktop environment from Exec command in .desktop file!
		echo "${greenColor}starting $chosenDesktop ! please wait... ${resetColor}"
		execCommand=$(which $(grep "^Exec" /usr/share/xsessions/"$chosenDesktop".desktop | sed 's/Exec=//'))	
		exec startx "$execCommand" 2>&1 > /dev/null
	}

	startDesktop "$userChoice"
else 
	echo "${redColor}You're already running a graphical environment.${resetColor}"
fi
